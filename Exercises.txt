Exercises Section 1.1.1

Exercise 1.2: Change the program to return -1. A return value of -1 is
often treated as an indicator that the program failed. Recompile and rerun
your program to see how your system treats a failure indicator from main.

Exercises Section 1.2

Exercise 1.3: Write a program to print Hello, World on the standard
output.

Exercise 1.4: Our program used the addition operator, +, to add two
numbers. Write a program that uses the multiplication operator, *, to print the product instead.

Exercise 1.5: We wrote the output in one large statement. Rewrite the
program to use a separate statement to print each operand.

Exercises Section 1.4.1

Exercise 1.9: Write a program that uses a while to sum the numbers from
50 to 100.

Exercise 1.10: In addition to the ++ operator that adds 1 to its operand, there is a decrement operator (--) that subtracts 1. Use the decrement operator to write a while that prints the numbers from ten down to zero.

Exercise 1.11: Write a program that prompts the user for two integers.
Print each number in the range specified by those two integers.

Exercises Section 1.4.2

Exercise 1.13: Rewrite the exercises from § 1.4.1 (p. 13) using for loops.

Exercises Section 1.4.4

Exercise 1.18: Compile and run the program from this section giving it only
equal values as input. Run it again giving it values in which no number is
repeated.

Exercise 1.19: Revise the program you wrote for the exercises in § 1.4.1 (p.
13) that printed a range of numbers so that it handles input in which the first number is smaller than the second.

Exercises Section 1.5.1

Exercise 1.20: http://www.informit.com/title/032174113 contains a copy of
Sales_item.h in the Chapter 1 code directory. Copy that file to your
working directory. Use it to write a program that reads a set of book sales
transactions, writing each transaction to the standard output.

Exercise 1.21: Write a program that reads two Sales_item objects that
have the same ISBN and produces their sum.

Exercise 1.22: Write a program that reads several transactions for the same
ISBN. Write the sum of all the transactions that were read.

Exercises Section 1.5.2

Exercise 1.23: Write a program that reads several transactions and counts
how many transactions occur for each ISBN.

Exercises Section 1.6

Exercise 1.25: Using the Sales_item.h header from the Web site,
compile and execute the bookstore program presented in this section.

